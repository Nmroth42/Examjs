{"version":3,"sources":["components/ResultPage/ResultPage.css","components/MainPage/MainPage.css","components/TestBlockPage/TestBlock.css","components/TestBlockPage/TestItem/TestItem.css","components/TestBlockPage/NavBar/NavBar.css","components/TestBlockPage/Popup/Popup.css","components/Header/Header.css","components/ResultPage/ResultTestItem/ResultTestItem.css","components/Drift/Drift.css","components/TestBlockPage/ScrollToTopBtn/Btn.css","components/ResultPage/ScrollToTopBtn/Btn.css","components/TestBlockPage/TestItem/TestItem.js","services/Api.js","services/TestsServices.js","components/TestBlockPage/Popup/Popup.js","components/TestBlockPage/NavBar/NavBar.js","components/TestBlockPage/ScrollToTopBtn/Btn.js","components/Drift/Drift.js","components/Header/Header.js","components/TestBlockPage/TestBlock.js","components/MainPage/MainPage.js","components/ResultPage/ResultTestItem/ResultTestItem.js","components/ResultPage/ScrollToTopBtn/Btn.js","components/ResultPage/ResultPage.js","serviceWorker.js","store/index.js","index.js"],"names":["module","exports","test_chose_wrapper","main_container","mainText","content","main_wrap","main_item","white_btn","top_panel","bottom_pannel","testBlocks","paleText","testBlock_wrapper","btn_bottom","desc_test","upper_wrap","Input","test_block","r0","navBar","hide","subNavBarLeft","button","button_2","popup","popup_inner","close_button","testBlock","explainBlock","header","TestItem","state","currentAnswer","varAnswer","idTask","number","event","target","checked","this","setState","Object","assign","value","getAttribute","props","onAddAnswer","_this2","react_default","a","createElement","className","classes","index","question","action","onClick","handleDestination","type","idtask","taskId","id","name","htmlFor","answ1","answ2","answ3","Component","connect","dispatch","answ","Api","axios","create","baseURL","TestsServices","get","testId","concat","answers","post","Popup","closePopup","text","React","answers_length","showPopup","isLoading","isShowSubNav","questions_length","togglePopup","TestServices","buf","onAddResultData","data","history","push","TestBlockPage_Popup_Popup","bind","react_router_dom","to","handleFinish","react_waypoint_es","onEnter","_handleWaypointEnter","onLeave","_handleWaypointLeave","withRouter","ScrollButton","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","intervalId","window","pageYOffset","clearInterval","scroll","scrollStepInPx","setInterval","scrollStep","delayInMs","title","scrollToTop","Drift","Header","TestBlock","questions","test","category","map","key","TestBlockPage_TestItem_TestItem","var1","var2","var3","_id","clearAnswers","match","params","onAddQuestionsLength","length","onAddCurrentTestTitles","components_Header_Header","components_Drift_Drift","lib","onBeforeunload","preventDefault","NavBar_NavBar","ScrollToTopBtn_Btn","TestsPage","tests","testList","ResultTestItem","rightAnsw","parseInt","chosenAnsw","style","float","color","explanation","ResultPage","result","arrayAnsw","undefined","results","ResultPage_ResultTestItem_ResultTestItem","scrollTo","resultData","testTitles","test_titles","sort","b","countRigthAnsw","components_ResultPage_ScrollToTopBtn_Btn","currentTestTitles","Boolean","location","hostname","initialState","store","createStore","arguments","newState","objectSpread","isSet","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","entry","err","return","subscribe","ReactDOM","render","es","react_router","exact","path","component","MainPage","document","getElementById"],"mappings":"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","file":"static/js/main.d6343738.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"test_chose_wrapper\":\"ResultPage_test_chose_wrapper_37TAJ\",\"main_container\":\"ResultPage_main_container_34oyG\",\"mainText\":\"ResultPage_mainText_2Hi8O\",\"content\":\"ResultPage_content_3hu76\",\"main_wrap\":\"ResultPage_main_wrap_1wGAH\",\"main_item\":\"ResultPage_main_item_3OVd0\",\"white_btn\":\"ResultPage_white_btn_2VIu8\",\"top_panel\":\"ResultPage_top_panel_2zdXm\",\"bottom_pannel\":\"ResultPage_bottom_pannel_2v4Fo\",\"testBlocks\":\"ResultPage_testBlocks_1kHHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test_chose_wrapper\":\"MainPage_test_chose_wrapper_1uTyh\",\"main_container\":\"MainPage_main_container_18SOg\",\"main_wrap\":\"MainPage_main_wrap_1Enfq\",\"paleText\":\"MainPage_paleText_14HsF\",\"content\":\"MainPage_content_2JqBR\",\"main_item\":\"MainPage_main_item_2XRLB\",\"testBlocks\":\"MainPage_testBlocks_1pVNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testBlock_wrapper\":\"TestBlock_testBlock_wrapper_7WnSf\",\"btn_bottom\":\"TestBlock_btn_bottom_3_1Om\",\"desc_test\":\"TestBlock_desc_test_1UIKY\",\"upper_wrap\":\"TestBlock_upper_wrap_TeNCL\",\"main_wrap\":\"TestBlock_main_wrap_-bN_1\",\"content\":\"TestBlock_content_wj_iv\",\"testBlocks\":\"TestBlock_testBlocks_2N4S4\",\"main_container\":\"TestBlock_main_container_fNrSP\",\"main_item\":\"TestBlock_main_item_3F8-G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"TestItem_Input_6ZA3k\",\"test_block\":\"TestItem_test_block_1hnZn\",\"paleText\":\"TestItem_paleText_3vfkG\",\"r0\":\"TestItem_r0_3zqWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar_27KQN\",\"hide\":\"NavBar_hide_3Ofvz\",\"subNavBarLeft\":\"NavBar_subNavBarLeft_3ExRO\",\"button\":\"NavBar_button_3yGGZ\",\"button_2\":\"NavBar_button_2_1w1cG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"Popup_popup_1lCA9\",\"popup_inner\":\"Popup_popup_inner_3689w\",\"close_button\":\"Popup_close_button_2pkEl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_container\":\"Header_main_container_24V5i\",\"main_item\":\"Header_main_item_2nKEM\",\"content\":\"Header_content_2D4ul\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testBlock\":\"ResultTestItem_testBlock_FFt1A\",\"paleText\":\"ResultTestItem_paleText_2I9e-\",\"explainBlock\":\"ResultTestItem_explainBlock_3c6Es\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Drift_header_26SJI\",\"upper_wrap\":\"Drift_upper_wrap_30PPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white_btn\":\"Btn_white_btn_29OQh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"white_btn\":\"Btn_white_btn_3Rf7t\"};","import React, { Component } from \"react\";\nimport classes from \"./TestItem.css\";\nimport { connect } from \"react-redux\";\n\nclass TestItem extends Component {\n  state = {\n    currentAnswer: {\n      varAnswer: 0,\n      idTask: \"\",\n      number: 0\n    }\n  };\n  handleDestination(event) {\n    // const options = this.state.options;\n    if (event.target.checked) {\n      this.setState(\n        Object.assign(this.state.currentAnswer, {\n          varAnswer: event.target.value,\n          idTask: event.target.getAttribute(\"idtask\"),\n          number: event.target.getAttribute(\"number\")\n        })\n      );\n      this.props.onAddAnswer(this.state.currentAnswer);\n    }\n  }\n  // const TestItem= (props) => {\n  render() {\n    return (\n      <div className={classes.testBlock}>\n        <span className={classes.paleText}>№{this.props.index} </span>\n        <p>{this.props.question}</p>\n\n        <form action=\"\">\n          <div className={classes.r0}>\n            <input\n              onClick={event => this.handleDestination(event)}\n              type=\"radio\"\n              idtask={this.props.taskId}\n              number={this.props.index}\n              id={this.props.taskId + \"_answ1\"}\n              className={classes.Input}\n              name=\"answer\"\n              value=\"1\"\n            />\n            <span>\n              <label htmlFor={this.props.taskId + \"_answ1\"}>\n                {this.props.answ1}\n              </label>\n            </span>\n            <br />\n          </div>\n\n          <div className={classes.r0}>\n            <input\n              onClick={event => this.handleDestination(event)}\n              type=\"radio\"\n              idtask={this.props.taskId}\n              number={this.props.index}\n              id={this.props.taskId + \"_answ2\"}\n              className={classes.Input}\n              name=\"answer\"\n              value=\"2\"\n            />\n            <span>\n              <label htmlFor={this.props.taskId + \"_answ2\"}>\n                {this.props.answ2}\n              </label>\n            </span>\n            <br />\n          </div>\n\n          <div className={classes.r0}>\n            <input\n              onClick={event => this.handleDestination(event)}\n              type=\"radio\"\n              idtask={this.props.taskId}\n              number={this.props.index}\n              id={this.props.taskId + \"_answ3\"}\n              className={classes.Input}\n              name=\"answer\"\n              value=\"3\"\n            />\n            <span>\n              <label htmlFor={this.props.taskId + \"_answ3\"}>\n                {this.props.answ3}\n              </label>\n            </span>\n            <br />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n// function mapStateToProps(state) {\n//   return { answers: state.answers }\n// }\nconst mapDispachToProps = dispatch => {\n  return {\n    onAddAnswer: answ => dispatch({ type: \"ADD_ANSWER\", value: answ })\n  };\n};\nexport default connect(\n  null,\n  mapDispachToProps\n)(TestItem);\n","import axios from 'axios'\n\nexport default () => {\n    return axios.create({\n    \n      baseURL: `https://examjs.herokuapp.com`\n      // baseURL: `http://localhost:8080/`\n      //  baseURL: `https://examjs.herokuapp.com/`\n    })\n  }","import Api from './Api'\n\nexport default {\n    getTestsTitles () {\n        return Api().get('api/tests')\n    },\n    getQuestions (testId) {\n        return Api().get(`api/questions/${testId}`)\n    },\n    getOneTestTitles(testId) {\n        return Api().get(`api/test/${testId}`)\n    },\n    postAnswers (answers) {\n        return Api().post('api/answers', answers)\n    },\n    // show (songId) {\n    //     return Api().get(`songs/${songId}`)\n    // },\n}","import React from 'react';\nimport './Popup.css';\nimport classes from \"./Popup.css\";\n\nclass Popup extends React.Component {\n  render() {\n    return (\n      <div  className={classes.popup} >\n        <div className={classes.popup_inner}>\n        <span  onClick={this.props.closePopup} className={classes.close_button} >&times;</span>\n          <p>{this.props.text}</p>\n          \n       \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Popup;","import React from \"react\";\nimport classes from \"./NavBar.css\";\nimport TestServices from \"../../../services/TestsServices\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport Popup from \"../Popup/Popup\";\nimport { Waypoint } from \"react-waypoint\";\nimport { Link } from \"react-router-dom\";\n\nclass navBar extends React.Component {\n  state = {\n    answers_length: 0,\n    showPopup: false,\n    isLoading: false,\n    isShowSubNav: false\n  };\n  togglePopup() {\n    this.setState({\n      showPopup: !this.state.showPopup\n    });\n  }\n  _handleWaypointLeave() {\n    // alert('eee')\n    this.setState({ isShowSubNav: true });\n    // console.log(this);\n  }\n  _handleWaypointEnter() {\n    // alert('eee')\n    this.setState({ isShowSubNav: false });\n    // console.log(this);\n  }\n  async handleFinish(event) {\n    // добавить проверку на полное отмечание ответов\n    // const jsonArrayAnswers = await JSON.parse(JSON.stringify(this.props.answers))\n    // const buf = await TestServices.postAnswers(jsonArrayAnswers)\n    // console.log('test buff')\n    // // console.log(buf.data[1][0])\n    // this.props.onAddResultData(buf.data)\n    // console.log(this.props.resultData)\n    // console.log(this);\n    // this.browserHistory.push('/result');\n\n    if (this.props.answers_length < this.props.questions_length) {\n      this.togglePopup();\n    } else {\n      this.setState({ isLoading: true });\n      // const jsonArrayAnswers = await this.props.answers;\n      const buf = await TestServices.postAnswers(this.props.answers);\n      this.props.onAddResultData(buf.data);\n      this.props.history.push(\"/result\");\n      // console.log(this.props.history);\n      // console.log(this.props.answers.length);\n      // console.log(this.props.answers_length);\n      // console.log(this.state.answers_length);\n      // console.log(buf);\n    }\n    // console.log(this.props.answers)\n  }\n  // componentDidUpdate(prevProps) {\n  //   // const oldProps = this.state.answers_length\n  //   if(this.props.answers_length !== prevProps.answers_length) {\n  //     this.setState({ answers_length:this.props.answers_lengthh })\n  //     console.log('tets')\n  //   }\n  // }\n  // shouldComponentUpdate(nextProps, nextState) {\n  //   if(this.props.answers.length !== nextProps.answers.length ) {\n  //      return true;\n  //   }\n  // }\n  render() {\n    return (\n      <div>\n        <div className={classes.navBar}>\n          {this.state.showPopup ? (\n            <Popup\n              text=\"You should check all questions\"\n              closePopup={this.togglePopup.bind(this)}\n            />\n          ) : null}\n          {/* <button onClick={this.togglePopup.bind(this)}> Click To Launch Popup</button> */}\n\n          <Link to=\"/\" className={classes.button}>\n            Back\n          </Link>\n          {/* {this.store.answers_length} */}\n          <div className={classes.button_2}>\n            {this.props.answers_length}/{this.props.questions_length}\n          </div>\n          {/* <div className={classes.button_2}>04:30</div> */}\n\n          {this.state.isLoading === true ? (\n            <div className={classes.button}>Loading...</div>\n          ) : (\n            <div\n              className={classes.button}\n              onClick={event => this.handleFinish(event)}\n            >\n              Finish\n            </div>\n          )}\n        </div>\n        <div\n          className={\n            this.state.isShowSubNav === true\n              ? classes.subNavBarLeft\n              : classes.hide\n          }\n        >\n          {\" \"}\n          <div className={classes.button_2}>\n            {this.props.answers_length}/{this.props.questions_length}\n          </div>{\" \"}\n        </div>\n        <Waypoint\n          onEnter={this._handleWaypointEnter.bind(this)}\n          onLeave={this._handleWaypointLeave.bind(this)}\n        />\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    answers: state.answers,\n    questions_length: state.questions_length,\n    answers_length: state.answers_length\n  };\n}\nconst mapDispachToProps = dispatch => {\n  return {\n    onAddResultData: data => dispatch({ type: \"ADD_RESULT\", value: data })\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispachToProps\n)(withRouter(navBar));\n","import React from \"react\";\nimport classes from \"./Btn.css\";\n\nclass ScrollButton extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      intervalId: 0\n    };\n  }\n\n  scrollStep() {\n    if (window.pageYOffset === 0) {\n      clearInterval(this.state.intervalId);\n    }\n    window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n  }\n\n  scrollToTop() {\n    let intervalId = setInterval(this.scrollStep.bind(this), this.props.delayInMs);\n    this.setState({intervalId: intervalId});\n  }\n\n  render() {\n    return <button\n      title='Back to top'\n      className={classes.white_btn}\n      onClick={() => {\n      this.scrollToTop();\n    }}>\n      <span className=''>Press to top</span>\n    </button>;\n  }\n}\n\nexport default ScrollButton;","import React, { Component } from \"react\";\nimport classes from \"./Drift.css\";\n\nclass Drift extends Component {\n  render() {\n    return (\n      <div className={classes.upper_wrap}>\n        <div className={classes.header}>{this.props.text} </div>\n      </div>\n    );\n  }\n}\nexport default Drift;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./Header.css\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div className={classes.main_container}>\n        <div className={classes.main_item}>\n          <Link className={classes.content} to={\"/\"}>\n            ExamJS\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Header;\n","import React, { Component } from \"react\";\nimport classes from \"./TestBlock.css\";\n// import {BrowserRouter as Router, Route, Link} from 'react-router-dom';\nimport TestItem from \"./TestItem/TestItem\";\nimport NavBar from \"./NavBar/NavBar\";\nimport ScrollButton from \"./ScrollToTopBtn/Btn\";\nimport TestServices from \"../../services/TestsServices\";\nimport { connect } from \"react-redux\";\nimport Drift from \"../Drift/Drift\";\nimport { Beforeunload } from \"react-beforeunload\";\nimport Header from \"../Header/Header\";\n// import PageProgress from 'react-page-progress'\nimport { Waypoint } from \"react-waypoint\";\n\nclass TestBlock extends Component {\n  state = {\n    questions: [],\n    test: {\n      number: null,\n      category: null\n    },\n    isLoading: true\n  };\n  // _handleWaypointLeave() {\n  //   alert('eee')\n  // }\n  componentWillUnmount() {\n    this.props.clearAnswers();\n  }\n  async componentDidMount() {\n    // console.log(this.props.match.params.id);\n    if (this.props.match.params.id) {\n      const questions = (await TestServices.getQuestions(\n        this.props.match.params.id\n      )).data;\n      const test = (await TestServices.getOneTestTitles(\n        this.props.match.params.id\n      )).data;\n      this.setState({\n        test: {\n          number: test[0].number,\n          category: test[0].category\n        }\n      });\n      this.setState({ questions: questions });\n      this.setState({ isLoading: false });\n      this.props.onAddQuestionsLength(this.state.questions.length);\n      this.props.onAddCurrentTestTitles(this.state.test);\n    }\n  }\n  questions = () =>\n    this.state.questions.map((name, index) => {\n      return (\n        <div className={classes.testBlock_wrapper} key={index} >\n          <TestItem \n            index={index + 1}\n            question={name.text}\n            answ1={name.var1}\n            answ2={name.var2}\n            answ3={name.var3}\n            taskId={name._id}\n          />\n        </div>\n      );\n    });\n\n  render() {\n    return (\n      <div>\n        {/* <PageProgress color={'#FBB4B4'} height={4}/> */}\n        <Header />\n        <Drift text=\"Solve the test\" />\n        <Beforeunload onBeforeunload={event => event.preventDefault()} />\n        <div className={classes.main_wrap}>\n          <div className={classes.TestBlock}>\n            <div className={classes.main_container}>\n              <div className={classes.main_item}>\n                <NavBar />\n                <Waypoint onLeave={this._handleWaypointLeave} />\n                {this.state.isLoading === true ? (\n                  <div className={classes.desc_test}>Loading...</div>\n                ) : (\n                  <div>\n                    <div className={classes.desc_test}>\n                      {this.state.test.category} - Test №\n                      {this.state.test.number}\n                    </div>\n                    {this.questions()}\n                    <div className={classes.btn_bottom}>\n                      <ScrollButton scrollStepInPx=\"40\" delayInMs=\"16.66\" />\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapDispachToProps = dispatch => {\n  return {\n    onAddQuestionsLength: data =>\n      dispatch({ type: \"ADD_CURRENT_QUEST_LENGTH\", value: data }),\n    clearAnswers: () => dispatch({ type: \"CLEAR_ANSWER\" }),\n    onAddCurrentTestTitles: data =>\n      dispatch({ type: \"ADD_CURRENT_TESR_TITLES\", value: data })\n  };\n};\n\nexport default connect(\n  null,\n  mapDispachToProps\n)(TestBlock);\n","import React, { Component } from \"react\";\nimport \"./MainPage.css\";\nimport { Link } from \"react-router-dom\";\nimport classes from \"./MainPage.css\";\nimport TestServices from \"../../services/TestsServices\";\nimport Header from \"../Header/Header\";\nimport Drift from \"../Drift/Drift\";\n\nclass TestsPage extends Component {\n  state = {\n    tests: [],\n    isLoading: true\n  };\n\n  async componentDidMount() {\n    const { data } = await TestServices.getTestsTitles();\n    this.setState({ tests: data });\n    this.setState({ isLoading: false });\n  }\n\n  testList = category =>\n    this.state.tests.map((name, index) => {\n      if (name.category === category) {\n        return (\n          <li key={name._id}>\n            <Link to={\"/quiz/\" + name._id}>Test №{name.number}</Link>\n          </li>\n        );\n      }\n      return null\n    });\n  render() {\n    return (\n      <div>\n        <Header />\n        <Drift text=\"Choose a test\" />\n        <div className={classes.main_wrap}>\n          <div className={classes.main_container}>\n            <div className={classes.main_item}>\n              <div className={classes.content}>\n                {this.state.isLoading === true ? (\n                  <div className={classes.paleText}>Loading...</div>\n                ) : (\n                  <div>\n                    <p>JavaScript in web technologies</p>\n                    <ul className={classes.test_chose_wrapper}>\n                      {this.testList(\"JavaScript in web technologies\")}\n                    </ul>\n                    <p>React.js</p>\n                    <ul className={classes.test_chose_wrapper}>\n                      {this.testList(\"React.js\")}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default TestsPage;\n","import React, { Component } from \"react\";\nimport classes from \"./ResultTestItem.css\";\n\nclass ResultTestItem extends Component {\n  state = {\n    rightAnsw: parseInt(this.props.rightAnsw),\n    chosenAnsw: parseInt(this.props.chosenAnsw)\n  };\n  render() {\n    return (\n      <div className={classes.testBlock}>\n        <div>\n          <span style={{ float: \"left\" }} className={classes.paleText}>\n            №{this.props.number}\n          </span>\n\n          {this.state.chosenAnsw === this.state.rightAnsw ? (\n            <span style={{ float: \"right\", color: \"green\" }}>correct </span>\n          ) : (\n            <span style={{ float: \"right\", color: \"red\" }}>incorrect</span>\n          )}\n        </div>\n        <br />\n        <p>{this.props.text}</p>\n        1.{this.props.var1}\n        <br />\n        2.{this.props.var2}\n        <br />\n        3.{this.props.var3}\n        <br />\n        <br />\n        Your answer: {this.props.chosenAnsw} <br />\n        Rigth answer: {this.props.rightAnsw}\n        <br />\n        <br />\n        <div className={classes.explainBlock}>\n          Explanation: {this.props.explanation}{\" \"}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ResultTestItem;\n","import React from \"react\";\nimport classes from \"./Btn.css\";\n\nclass ScrollButton extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      intervalId: 0\n    };\n  }\n\n  scrollStep() {\n    if (window.pageYOffset === 0) {\n      clearInterval(this.state.intervalId);\n    }\n    window.scroll(0, window.pageYOffset - this.props.scrollStepInPx);\n  }\n\n  scrollToTop() {\n    let intervalId = setInterval(this.scrollStep.bind(this), this.props.delayInMs);\n    this.setState({intervalId: intervalId});\n  }\n\n  render() {\n    return <button\n      title='Back to top'\n      className={classes.white_btn}\n      onClick={() => {\n      this.scrollToTop();\n    }}>\n      <span className=''>Press to top</span>\n    </button>;\n  }\n}\n\nexport default ScrollButton;","import React, { Component } from \"react\";\nimport \"./ResultPage.css\";\nimport classes from \"./ResultPage.css\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport ResultTestItem from \"./ResultTestItem/ResultTestItem\";\nimport Drift from \"../Drift/Drift\";\nimport Header from \"../Header/Header\";\nimport ScrollButton from \"./ScrollToTopBtn/Btn\";\nimport { Beforeunload } from \"react-beforeunload\";\n// import PageProgress from 'react-page-progress'\n\nclass ResultPage extends Component {\n  handleFinishG(event) {\n    // console.log(this.state.result.arrayAnsw[0]);\n  }\n  state = {\n    result: {},\n    arrayAnsw: undefined,\n    test: {\n      number: null,\n      category: null\n    }\n  };\n\n  async componentDidMount() {\n    window.scrollTo(0, 0);\n    this.setState({ result: this.props.resultData });\n    this.setState({ testTitles: this.props.test_titles });\n    this.setState({\n      test: {\n        number: this.props.test_titles.number,\n        category: this.props.test_titles.category\n      }\n    });\n    if (this.props.resultData.arrayAnsw !== undefined) {\n      this.setState({\n        arrayAnsw: this.props.resultData.arrayAnsw.sort(function(a, b) {\n          return parseInt(a.number) - parseInt(b.number);\n        })\n      });\n    }\n  }\n  results = () => {\n    if (this.state.arrayAnsw !== undefined) {\n      return this.state.arrayAnsw.map((name, index) => {\n        return (\n          <div className={classes.testBlock_wrapper} key={index}>\n            <ResultTestItem\n              text={name.text}\n              var1={name.var1}\n              var2={name.var2}\n              var3={name.var3}\n              number={name.number}\n              chosenAnsw={name.chosenAnsw}\n              rightAnsw={name.rightAnsw}\n              explanation={name.explanation}\n            />\n          </div>\n        );\n      });\n    } else {\n      return <div>It looks like your answers are empty.</div>;\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {/* <PageProgress color={'#FBB4B4'} height={4}/> */}\n        <Header />\n        <Drift text=\"Result\" />\n        <Beforeunload onBeforeunload={event => event.preventDefault()} />\n        <div className={classes.main_wrap}>\n          <div className={classes.main_container}>\n            <div className={classes.main_item}>\n              <div className={classes.content}>\n                {this.state.arrayAnsw !== undefined ? (\n                  <div className={classes.mainText}>\n                    {this.state.test.category} - Test №{this.state.test.number}{\" \"}\n                    <br />\n                   <span  > Your result: \n                    {parseInt(\n                      (this.state.result.countRigthAnsw /\n                        this.props.questions_length) *\n                        100\n                    )}\n                     </span> \n                    %<br />{\" \"}\n                  </div>\n                ) : null}\n                {this.results()}\n              </div>\n              <div className={classes.top_panel}>\n                <Link to=\"/\" className={classes.white_btn}>\n                  Take another test\n                </Link>\n              </div>\n              {this.state.arrayAnsw !== undefined ? (\n                <div className={classes.bottom_pannel}>\n                  <ScrollButton scrollStepInPx=\"40\" delayInMs=\"16.66\" />\n                </div>\n              ) : null}\n              <br />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    resultData: state.resultData,\n    answers: state.answers,\n    test_titles: state.currentTestTitles,\n    questions_length: state.questions_length\n  };\n}\nconst mapDispachToProps = dispatch => {\n  return {\n    onAddResultData: data => dispatch({ type: \"ADD_RESULT\", value: data })\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispachToProps\n)(ResultPage);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from \"redux\";\n\nconst initialState = {\n\n  answers: [],\n    //redo\n  answers_length: 0,\n  resultData: {},\n    //redo\n  questions_length: 0,\n  currentTestTitles: {}\n};\n\nconst answReducer = (state = initialState, action) => {\n  const newState = { ...state };\n\n  if (action.type === \"ADD_ANSWER\") {\n    // console.log(action.value.idTask);\n    // newState.answers.push(action.value);\n    // var idTask = action.value.idTask;\n    let isSet = false;\n\n    for (let entry of initialState.answers) {\n      if (action.value.idTask === entry.idTask) {\n        isSet = true;\n        break;\n      }\n    }\n\n    if (isSet === false) {\n      newState.answers.push(action.value);\n    }\n    newState.answers_length = newState.answers.length;\n    // state.answers.push(action.value);\n    // newState.push(+action.val)\n    // return newState;\n  }\n  if (action.type === \"ADD_RESULT\") {\n    newState.resultData = action.value;\n    // this.setState({ resultData: action.value.countRigthAnsw })\n    // Object.assign( state.resultData, action.value);\n    // console.log(\"rddux\")\n    // console.log(action.value.countRigthAnsw)\n    // console.log( state.resultData)\n    // state.answers.push(action.value);\n    // newState.push(+action.val)\n    // return newState;\n    return newState;\n  }\n  if (action.type === \"ADD_CURRENT_QUEST_LENGTH\") {\n    newState.questions_length = action.value;\n    // this.setState({ resultData: action.value.countRigthAnsw })\n    // Object.assign( state.resultData, action.value);\n    // console.log(\"rddux\")\n    // console.log(action.value.countRigthAnsw)\n    // console.log( state.resultData)\n    // state.answers.push(action.value);\n    // newState.push(+action.val)\n    // return newState;\n    return newState;\n  }\n  if (action.type === \"CLEAR_ANSWER\") {\n    newState.answers.length = 0;\n    newState.answers_length = 0;\n    // this.setState({ resultData: action.value.countRigthAnsw })\n    // Object.assign( state.resultData, action.value);\n    // console.log(\"rddux\")\n    // console.log(action.value.countRigthAnsw)\n    // console.log( state.resultData)\n    // state.answers.push(action.value);\n    // newState.push(+action.val)\n    // return newState;\n    return newState;\n  }\n  if (action.type === \"ADD_CURRENT_TESR_TITLES\") {\n    newState.currentTestTitles = action.value;\n  }\n\n  return newState;\n};\nconst store = createStore(answReducer);\n\nstore.subscribe(() => {\n  // console.log(store.getState());\n  // console.log(initialState.answers.length)\n  // for (let index = 0; index < initialState.answers.length; ++index) {\n\n  //   console.log(initialState.answers[index])\n  //   if (initialState.answers[index].idTask == '5d07248ca62557361949d049') {\n  //     console.log('hfdty')\n  //      // options.splice(0,1)\n  //   }\n\n  // }\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport TestBlock from \"./components/TestBlockPage/TestBlock\";\nimport MainPage from \"./components/MainPage/MainPage\";\nimport ResultPage from \"./components/ResultPage/ResultPage\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\nimport {\n  HashRouter,\n  Route,\n  Redirect\n} from \"react-router-dom\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Route exact path=\"/\" component={MainPage} />\n      <Route exact path=\"/result\" component={ResultPage} />\n      <Route path=\"/quiz/:id\" component={TestBlock} />\n      {/* <HashRouter path=\"/\" render={() => <Redirect to=\"/\" />} /> */}\n    </HashRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// serviceWorker.unregister();\n"],"sourceRoot":""}